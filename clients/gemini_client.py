from typing import List
from google.genai import Client

class GeminiClient:
    def __init__(self, api_key: str, model: str):
        self.client = Client(api_key=api_key)
        self.model = model
    def analyze(self, query: str, documents: List[str]) -> str:
        """
        Выполняет анализ судебной практики через Gemini
        """
        # Формируем длинный контекст из всех документов
        context = "\n\n---\n\n".join(documents)

        prompt = f"""
             "Ты юридический помощник. На основе приведенных фрагментов судебных решений, "
            "сделай вывод, полезный юристу. "
            "Если решений мало, укажи это."
            
            "Требуемый вывод  Детализация
                Краткая справка  Наименование компании, регио
                н регистрации, отрасль деятельности (если имеется)
                Судебная статистика  
                • Сколько дел выиграно / проиграно.
                • Общая сумма исковых требований и фактически взысканная сумма.
                • Средняя продолжительность процессов.
                Топ-5 наиболее значимых дел по суммам  Номер, дата, суд, предмет спора, результат, ссылка на решение.
                "
            "Используй только приведённую информацию, не используй никаких дополнительных источников."

            "Если имеются ссылки, добавляй их"
            
            **Запрос:** {query}
            
            **Судебная практика:** 
            {context}
            
        """

        response = self.client.models.generate_content(model=self.model, contents=prompt)
        return response.text
